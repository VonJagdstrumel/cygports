#!/usr/bin/env bash

cd "$(dirname "$0")/.." || exit

for arch in noarch x86_64 ; do
    mkdir -p dist/$arch/release
    find packages \
        -mindepth 4 \
        -path "*.$arch/dist/*" \
        -prune \
        -exec cp -ru {} dist/$arch/release \;
    [[ $arch == noarch ]] && \
        continue
    pushd dist/$arch > /dev/null
    mksetupini \
        --arch $arch \
        --disable-check missing-required-package \
        --inifile setup.ini \
        --release cygwin-vonjagdstrumel \
        --releasearea ..
    bzip2 < setup.ini > setup.bz2
    xz < setup.ini > setup.xz
    zstd < setup.ini > setup.zst

    if [[ $1 ]]; then
        for setup in setup.{ini,bz2,xz,zst}; do
            gpg2 --yes \
                -u "$1" \
                -o $setup.sig \
                -b $setup
        done
    fi

    sha512sum -t setup.* > sha512.sum
    popd > /dev/null
done

if [[ $1 ]]; then
    gpg2 --yes \
        -o dist/pubring.gpg \
        --export "$1!"
fi

awk 'BEGIN {
    print("|Package|Summary|Categories|Versions|")
    print("|---|---|---|---|")
}
match($0, /^@ (.+)/, a) {
    if ("name" in p && !match(p["category"], /(^| )_obsolete( |$)/)) {
        for (k in p) {
            if (k != "sdesc") {
                gsub(/ /, "`, `", p[k])
                gsub(/(^|$)/, "`", p[k])
            }
        }
        printf("|%s|%s|%s|%s|\n", p["name"], p["sdesc"], p["category"], p["version"])
    }
    delete p
    p["name"] = a[1]
}
match($0, /^(sdesc|category|version): (.+)/, a) {
    if (a[1] == "sdesc") {
        gsub(/(^"|"$)/, "", a[2])
        if (a[2] == p["name"]) next
    }
    p[a[1]] = p[a[1]] ? p[a[1]] " " a[2] : a[2]
}' dist/x86_64/setup.ini > dist/_report.md
